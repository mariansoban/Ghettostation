<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/7gAOQWRvYmUAZAAAAAAB/+EAFkV4aWYAAE1NACoAAAAIAAAAAAAA
        /+wAEUR1Y2t5AAEABAAAADwAAP/hAypodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvADw/eHBhY2tl
        dCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+DQo8eDp4bXBtZXRhIHht
        bG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjMtYzAxMSA2Ni4x
        NDU2NjEsIDIwMTIvMDIvMDYtMTQ6NTY6MjcgICAgICAgICI+DQoJPHJkZjpSREYgeG1sbnM6cmRmPSJo
        dHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4NCgkJPHJkZjpEZXNjcmlw
        dGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9t
        bS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VS
        ZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOkRvY3VtZW50
        SUQ9InhtcC5kaWQ6MkZFQjdCMzZBRUIwMTFFMzk1M0JDOTczNEY5QUIxNzYiIHhtcE1NOkluc3RhbmNl
        SUQ9InhtcC5paWQ6MkZFQjdCMzVBRUIwMTFFMzk1M0JDOTczNEY5QUIxNzYiIHhtcDpDcmVhdG9yVG9v
        bD0iQWRvYmUgUGhvdG9zaG9wIENTNiBXaW5kb3dzIj4NCgkJCTx4bXBNTTpEZXJpdmVkRnJvbSBzdFJl
        ZjppbnN0YW5jZUlEPSJGN0IwREYyNEZCRjJCMjNCQzc2QTFERUQ5MjJCQUE3QyIgc3RSZWY6ZG9jdW1l
        bnRJRD0iRjdCMERGMjRGQkYyQjIzQkM3NkExREVEOTIyQkFBN0MiLz4NCgkJPC9yZGY6RGVzY3JpcHRp
        b24+DQoJPC9yZGY6UkRGPg0KPC94OnhtcG1ldGE+DQo8P3hwYWNrZXQgZW5kPSd3Jz8+/9sAQwAGBAQE
        BQQGBQUGCQYFBgkLCAYGCAsMCgoLCgoMEAwMDAwMDBAMDg8QDw4MExMUFBMTHBsbGxwfHx8fHx8fHx8f
        /9sAQwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f
        Hx8fHx8fHx8f/8AAEQgAwwMgAwERAAIRAQMRAf/EABwAAQADAQEBAQEAAAAAAAAAAAAGBwgFBAMCAf/E
        AEsQAAEEAQMCAwQHAgkHDQAAAAABAgMEBRESBiEHMRMIQWEiFFFxI7QVdTcyc4GRQlLDJHS1GLOEpNQ2
        VjixYnKyM9M0JYWlFhdX/8QAFAEBAAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/
        2gAMAwEAAhEDEQA/AMqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        b8u2wsrHubu+0VdU06gZSAsHjPf7u7xnDV8LhuQyQY2qitrwSV6tjY1V12tfPFK9Gp7G66J7AIRlcney
        uTuZS/L51+/PJatzaNbvmmer5HbWo1qaucq6ImgHrl5RnZuNQcZktbsJVsvvQVNkfw2JGIxz96N8xdWp
        4K7T3AcoCWcH7q9wODNss4tmJMfFcVrrEPlwzxuc3ojvLnZK1rtOm5E1A8fNeecr5tlY8tye9+IZCKBt
        WObyoYdIWOc9rdsDI2/tSOXXTUDw8d5DmOOZqrm8NY+UydJyvq2NjJNjlarVXbI17F6OXxQDnOc5zlc5
        VVyrqqr1VVUDo8e5HnOOZevmMHckoZKqqrDZiVNyapoqKi6tc1U6K1U0UDq827l855xNXl5TlpMitVFS
        uxWRQxs3ftK2KFkce5dOrtuoHGwebyeCy9PMYqf5bI0JWz1J9rX7JGLq1216Oav1KmgHwvXbV+7YvW3+
        batSvnsSaIm6SRyue7RqIiaqvsA+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf/Z
</value>
  </data>
</root>